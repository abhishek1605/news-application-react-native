{"version":3,"file":"static/js/main.47677d42.js","mappings":"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","sources":["src/Context/AppContext.ts","src/constants/reducerConstants.ts","src/constants/commonConstants.ts","src/utils/commonUtils.ts","src/Reducer/index.ts","src/Theme/ThemeConstants.ts","src/constants/navigatorConstants.ts","src/components/InitialScreen/InitialScreen.style.ts","src/constants/initialScreenConstants.ts","src/components/InitialScreen/InitialScreenHeading/index.tsx","src/components/common/CustomButton/index.tsx","src/components/InitialScreen/InitialScreenButtons/index.tsx","src/components/common/Icons/upArrowSvg.tsx","src/components/common/SwipeUpTransition/index.tsx","src/components/InitialScreen/index.tsx","src/services/apiService.ts","src/components/common/NewsCardLoader/index.tsx","src/components/common/ErrorScreen/index.tsx","src/components/NewsListing/ListingSection/NewsCard/index.tsx","src/constants/FilterConstants.ts","src/components/NewsListing/FilterSection/FilterModal/index.tsx","src/components/NewsListing/FilterSection/index.tsx","src/constants/topicConstants.ts","src/components/NewsListing/TopicSection/index.tsx","src/components/NewsListing/ListingSection/ListingHeader/index.tsx","src/components/NewsListing/ListingSection/index.tsx","src/components/NewsListing/index.tsx","src/components/WebViewScreen/index.tsx","src/components/NewAppContainer/index.tsx","App.tsx","node_modules/moment/locale|sync|/^/.//.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { createContext } from \"react\";\nimport { ContextProps } from \"../types/appTypes\";\n\nconst AppContext = createContext({} as ContextProps);\n\nexport default AppContext;\n","export const SET_LANGUAGE: string = \"SET_LANGUAGE\";\nexport const SET_TOPIC: string = \"SET_TOPIC\";\nexport const SET_FILTER_VALUES: string = \"SET_FILTER_VALUES\";\nexport const SET_ARTICLE_DATA: string = \"SET_ARTICLE_DATA\";\nexport const SET_ARTICLES_ERROR: string = \"SET_ARTICLES_ERROR\";\nexport const SET_ARTICLES_LOADING: string = \"SET_ARTICLES_LOADING\";\nexport const SET_THEME: string = \"SET_THEME\";\n","import { languageArrayType, languageTextType } from \"../types/appTypes\";\n\ntype shadowConfigType = {\n  shadowColor: string;\n  shadowOffset: {\n    width: number;\n    height: number;\n  };\n  shadowOpacity: number;\n  shadowRadius: number;\n  elevation: number;\n};\n\nexport const shadowConfig: shadowConfigType = {\n  shadowColor: \"#000\",\n  shadowOffset: {\n    width: 2,\n    height: 2,\n  },\n  shadowOpacity: 0.6,\n  shadowRadius: 2,\n  elevation: 4,\n};\n\nexport const SWIPE_UP_TEXT: languageTextType = {\n  en: \"Swipe Up\",\n  ar: \"اسحب للاعلى\",\n};\n\nexport const CANCEL_TEXT: languageTextType = {\n  en: \"CANCEL\",\n  ar: \"يلغي\",\n};\nexport const SAVE_TEXT: languageTextType = {\n  en: \"SAVE\",\n  ar: \"يحفظ\",\n};\nexport const FIND_MORE_TEXT: languageTextType = {\n  en: \"Find out more\",\n  ar: \"اكتشف المزيد\",\n};\n\nexport const DEFAULT_ERROR_MESSAGE: languageTextType = {\n  en: \"Something Went Wrong! Please Try Again Later\",\n  ar: \"هناك خطأ ما! يرجى المحاولة مرة أخرى في وقت لاحق\",\n};\nexport const NEWS_FEED_TEXT: languageTextType = {\n  en: \"News Feed\",\n  ar: \"موجز الأخبار\",\n};\nexport const DEFAULT_EMPTY_MESSAGE: languageTextType = {\n  en: \"No News Feed Found\",\n  ar: \"لم يتم العثور على موجز أخبار\",\n};\nexport const LANGUAGE_DAYS: languageArrayType = {\n  en: [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"],\n  ar: [\"اﻷحد\", \"اﻷثنين\", \"الثلاثاء\", \"اﻷربعاء\", \"الخميس\", \"الجمعة\", \"السبت\"],\n};\n\nexport const LANGUAGE_MONTH: languageArrayType = {\n  en: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"June\",\n    \"Jul\",\n    \"Aug\",\n    \"Sept\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n  ar: [\n    \"يناير\",\n    \"فبراير\",\n    \"مارس\",\n    \"إبريل\",\n    \"مايو\",\n    \"يونيو\",\n    \"يوليو\",\n    \"أغسطس\",\n    \"سبتمبر\",\n    \"أكتوبر\",\n    \"نوفمبر\",\n    \"ديسمبر\",\n  ],\n};\n\nexport const NEWS_API_KEYS: string[] = [\n  \"fdb07f4a97b54701928970d75a30fbda\",\n  \"7b665b8fbe884b45abeb1dcc966da19d\",\n  \"986df724f7164bfc8da2be5df3b622b2\",\n  \"0aaafe1a0fad4b9b833a427ca9adb66a\",\n];\n","import moment from \"moment\";\nimport { ResponsiveValue } from \"native-base/lib/typescript/components/types\";\nimport { Dimensions, Platform } from \"react-native\";\nimport { LANGUAGE_DAYS, LANGUAGE_MONTH } from \"../constants/commonConstants\";\nimport { languageTextType } from \"../types/appTypes\";\nimport { configParamType, transitionConfigType } from \"../types/utilsTypes\";\n\nconst windowDimensions = Dimensions.get(\"window\");\n\ntype dimensionProps = {\n  height: number;\n};\n\nexport const setClientHeight = (): string => {\n  if (Platform.OS === \"web\") {\n    if (windowDimensions.height) {\n      return `${windowDimensions.height}px`;\n    }\n    return \"100vh\";\n  }\n  return \"100%\";\n};\n\nexport const getPresenceTransitionConfig = ({\n  duration = 500,\n  isAddScaling,\n}: configParamType): transitionConfigType => {\n  const config: transitionConfigType = {\n    initial: {\n      opacity: 0,\n    },\n    animate: {\n      opacity: 1,\n      transition: {\n        duration,\n      },\n    },\n  };\n  if (isAddScaling) {\n    config.initial.scale = 0;\n    config.animate.scale = 1;\n  }\n  return config;\n};\n\nexport const getlanguageText = (\n  langObj: languageTextType,\n  language: string | undefined\n): string => {\n  if (language === \"en\") {\n    return langObj.en;\n  }\n  if (language === \"ar\") {\n    return langObj.ar;\n  }\n  return \"\";\n};\nexport const getTextAlign = (\n  language: string | undefined\n): ResponsiveValue<CanvasTextAlign> => {\n  if (language === \"ar\") {\n    return \"right\";\n  }\n  return \"left\";\n};\n\nexport const getPastDate = (days: number): string => {\n  return moment().subtract(days, \"days\").format(\"YYYY-MM-DD\");\n};\n\nexport const convertObjIntoString = (obj: object): string => {\n  let string = \"\";\n  Object.keys(obj).forEach((key) => {\n    string = string + `&${key}=${obj[key as keyof object]}`;\n  });\n  return string;\n};\n\nexport const getDateText = (\n  date: string,\n  language: string | undefined\n): string => {\n  if (date) {\n    const dateObj = new Date(date);\n    if (language === \"ar\") {\n      const arDays: string[] = LANGUAGE_DAYS.ar;\n      const arMonths: string[] = LANGUAGE_MONTH.ar;\n      return `${arDays[dateObj.getDay()]}, ${dateObj.getDate()} ${\n        arMonths[dateObj.getMonth()]\n      }, ${dateObj.getFullYear()}`;\n    }\n    if (language === \"en\") {\n      const enDays: string[] = LANGUAGE_DAYS.en;\n      const enMonths: string[] = LANGUAGE_MONTH.en;\n      return `${enDays[dateObj.getDay()]}, ${dateObj.getDate()} ${\n        enMonths[dateObj.getMonth()]\n      }, ${dateObj.getFullYear()}`;\n    }\n  }\n\n  return \"\";\n};\n","import {\n  SET_ARTICLES_ERROR,\n  SET_ARTICLES_LOADING,\n  SET_ARTICLE_DATA,\n  SET_FILTER_VALUES,\n  SET_LANGUAGE,\n  SET_THEME,\n  SET_TOPIC,\n} from \"../constants/reducerConstants\";\nimport { actionType, initialStateTypes } from \"../types/reducerTypes\";\nimport { getPastDate } from \"../utils/commonUtils\";\n\nexport const initialState: initialStateTypes = {\n  theme: \"\",\n  language: \"\",\n  topic: \"apple\",\n  sortBy: \"publishedAt\",\n  from: getPastDate(15),\n  articles: [],\n  isNewsLoading: false,\n  isError: false,\n};\n\nexport const AppReducer = (state: initialStateTypes, action: actionType) => {\n  switch (action.type) {\n    case SET_LANGUAGE: {\n      const { queryParam } = action.payload;\n      return {\n        ...state,\n        language: queryParam,\n      };\n    }\n    case SET_THEME: {\n      const { theme } = action.payload;\n      return {\n        ...state,\n        theme,\n      };\n    }\n    case SET_TOPIC: {\n      const { topic } = action.payload;\n      return {\n        ...state,\n        topic,\n      };\n    }\n    case SET_ARTICLES_ERROR:\n    case SET_ARTICLES_LOADING:\n    case SET_ARTICLE_DATA:\n    case SET_FILTER_VALUES: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    default:\n      throw new Error(\"No such action exist\");\n  }\n};\n","import { extendTheme, Theme } from \"native-base\";\n\n// Extend the base theme to create a light theme\nexport const lightTheme: Theme = extendTheme({\n  colors: {\n    primary: {\n      backgroundColor: \"#FFFFFF\",\n      borderColor: \"#8899A6\",\n      secondaryBgColor: \"#F8F8F8\",\n      buttonColor: \"#E4E9F1\",\n      textColor: \"#000\",\n      selectedBtnTextColor: \"#000\",\n    },\n  },\n});\n\n// Extend the base theme to create a dark theme\nexport const darkTheme: Theme = extendTheme({\n  colors: {\n    primary: {\n      backgroundColor: \"#000000\",\n      borderColor: \"#3E4453\",\n      secondaryBgColor: \"#27292F\",\n      buttonColor: \"#343F54\",\n      textColor: \"#FFFFFF\",\n      selectedBtnTextColor: \"#FFFFFF\",\n    },\n  },\n});\n","type NavigatorConstant = {\n  NEWS_LISTING: string;\n  INITIAL_SCREEN: string;\n  WEB_VIEW_SCREEN: string;\n};\n\nexport const NAVIGATION_PAGES: NavigatorConstant = {\n  NEWS_LISTING: \"NewsListing\",\n  INITIAL_SCREEN: \"InitialScreen\",\n  WEB_VIEW_SCREEN: \"WebViewScreen\",\n};\n","import { StyleSheet } from \"react-native\";\n\ntype SwipeStripStyle = {\n  width: string;\n  height: number;\n  bottom: number;\n  left: number;\n};\n\ntype ContainerStyle = {\n  alignItems: string;\n  marginBottom: string;\n  marginTop: string;\n};\n\ntype InitialScreenStyle = {\n  swipeStrip: SwipeStripStyle;\n  container: ContainerStyle;\n};\n\nconst styles: InitialScreenStyle = StyleSheet.create({\n  swipeStrip: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: 120,\n    bottom: 0,\n    left: 0,\n  },\n  container: {\n    alignItems: \"center\",\n    marginTop: \"auto\",\n    marginBottom: \"auto\",\n  },\n});\n\nexport default styles;\n","export type languageConfigType = {\n  text: string;\n  btnText: string;\n  queryParam: string;\n};\ntype langugageType = {\n  ENGLISH: languageConfigType;\n  ARABIC: languageConfigType;\n};\n\nexport const INITIAL_SCREEN_TEXT_CONFIG: langugageType = {\n  ENGLISH: {\n    text: \"Choose Your Language\",\n    btnText: \"English\",\n    queryParam: \"en\",\n  },\n  ARABIC: { text: \"اختر لغتك\", btnText: \"عربي\", queryParam: \"ar\" },\n};\n","import React, { useMemo } from \"react\";\nimport { Box, Center, Text } from \"native-base\";\nimport { INITIAL_SCREEN_TEXT_CONFIG } from \"../../../constants/initialScreenConstants\";\n\nconst InitialScreenHeading = () => {\n  const HEADING_VALUES: string[] = useMemo(() => {\n    return Object.values(INITIAL_SCREEN_TEXT_CONFIG).map((val) => val.text);\n  }, [INITIAL_SCREEN_TEXT_CONFIG]);\n  return (\n    <Box pt=\"18\">\n      <Center>\n        {HEADING_VALUES.map((value, index) => (\n          <Text key={index} color=\"primary.textColor\" fontSize=\"xl\">\n            {value}\n          </Text>\n        ))}\n      </Center>\n    </Box>\n  );\n};\n\nexport default InitialScreenHeading;\n","import { Button } from \"native-base\";\nimport React from \"react\";\n\ntype Props = {\n  btnText: string;\n  onPress: () => void;\n  isSelected: boolean;\n  isDisabled: boolean;\n  customStyle: object;\n};\ntype styleObjType = {\n  variant: string;\n  bgColor: string;\n};\nconst CustomButton = (props: Props) => {\n  const {\n    btnText,\n    onPress,\n    isSelected,\n    isDisabled = false,\n    customStyle,\n  } = props;\n\n  const styleObj: styleObjType = {\n    variant: \"outline\",\n    bgColor: \"primary.backgroundColor\",\n  };\n\n  if (isSelected) {\n    styleObj.variant = \"solid\";\n    styleObj.bgColor = \"primary.buttonColor\";\n  }\n  return (\n    <Button\n      {...styleObj}\n      {...customStyle}\n      style={{\n        shadowColor: \"#000\",\n        shadowOffset: {\n          width: 0,\n          height: 2,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 2,\n        elevation: 4,\n      }}\n      borderWidth={1}\n      borderColor=\"primary.buttonColor\"\n      _text={{\n        color: isSelected\n          ? \"primary.selectedBtnTextColor\"\n          : \"primary.textColor\",\n        fontWeight: \"bold\",\n      }}\n      onPress={onPress}\n      isDisabled={isDisabled}\n    >\n      {btnText}\n    </Button>\n  );\n};\n\nexport default CustomButton;\n","import { HStack } from \"native-base\";\nimport React, { useContext, useMemo } from \"react\";\nimport {\n  INITIAL_SCREEN_TEXT_CONFIG,\n  languageConfigType,\n} from \"../../../constants/initialScreenConstants\";\nimport { SET_LANGUAGE } from \"../../../constants/reducerConstants\";\nimport AppContext from \"../../../Context/AppContext\";\nimport CustomButton from \"../../common/CustomButton\";\n\nconst InitialScreenButtons = () => {\n  const { state, dispatch } = useContext(AppContext);\n  const { language } = state || {};\n  const BTN_TEXT: languageConfigType[] = useMemo(() => {\n    return Object.values(INITIAL_SCREEN_TEXT_CONFIG);\n  }, [INITIAL_SCREEN_TEXT_CONFIG]);\n  const handleBtnPress = (queryParam: string) => {\n    if (language === queryParam) {\n      return;\n    }\n    dispatch({ type: SET_LANGUAGE, payload: { queryParam } });\n  };\n  return (\n    <HStack space={2} justifyContent=\"center\" pt=\"15\">\n      {BTN_TEXT.map((config, index) => (\n        <CustomButton\n          key={index}\n          btnText={config.btnText}\n          isSelected={language === config.queryParam}\n          onPress={() => handleBtnPress(config.queryParam)}\n          isDisabled={false}\n          customStyle={{ width: 125, height: 50 }}\n        />\n      ))}\n    </HStack>\n  );\n};\n\nexport default InitialScreenButtons;\n","import { Box } from \"native-base\";\nimport React from \"react\";\nimport Svg, { Path } from \"react-native-svg\";\n\ntype svgType = {\n  size: string;\n  color: string;\n  customStyle: object;\n  height: string;\n};\n\nconst UpArrow = ({ size, height, color = \"#fff\", customStyle }: svgType) => (\n  <Box width={size} height={height} {...customStyle}>\n    <Svg viewBox=\"0 0 330 330\">\n      <Path\n        fill={color}\n        d=\"M325.606,229.393l-150.004-150C172.79,76.58,168.974,75,164.996,75c-3.979,0-7.794,1.581-10.607,4.394\n        l-149.996,150c-5.858,5.858-5.858,15.355,0,21.213c5.857,5.857,15.355,5.858,21.213,0l139.39-139.393l139.397,139.393\n        C307.322,253.536,311.161,255,315,255c3.839,0,7.678-1.464,10.607-4.394C331.464,244.748,331.464,235.251,325.606,229.393z\"\n      />\n    </Svg>\n  </Box>\n);\n\nexport default UpArrow;\n","import React, {\n  PresenceTransition,\n  VStack,\n  Text,\n  useTheme,\n  Center,\n} from \"native-base\";\nimport { useContext, useEffect, useMemo, useState } from \"react\";\nimport { Platform } from \"react-native\";\nimport { SWIPE_UP_TEXT } from \"../../../constants/commonConstants\";\nimport AppContext from \"../../../Context/AppContext\";\nimport {\n  getlanguageText,\n  getPresenceTransitionConfig,\n} from \"../../../utils/commonUtils\";\nimport UpArrow from \"../Icons/upArrowSvg\";\n\nconst SwipeUpTransition = () => {\n  const { colors } = useTheme();\n  const { state } = useContext(AppContext);\n  const { language } = state || {};\n  const { textColor }: any = colors.primary;\n  const [isFirstVisbile, setFirstVisble] = useState(true);\n  const [isSecondVisbile, setSecondVisible] = useState(false);\n\n  const swipeText: string = useMemo(() => {\n    return getlanguageText(SWIPE_UP_TEXT, language);\n  }, [language]);\n\n  useEffect(() => {\n    if (isFirstVisbile) {\n      setTimeout(() => {\n        setFirstVisble(false);\n        setSecondVisible(true);\n      }, 700);\n    } else {\n      setTimeout(() => {\n        setFirstVisble(true);\n        setSecondVisible(false);\n      }, 700);\n    }\n  }, [isFirstVisbile, isSecondVisbile]);\n  return (\n    <Center position=\"relative\" bottom=\"110\">\n      <VStack\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        position=\"relative\"\n        top={Platform.OS === \"web\" ? \"7\" : \"0\"}\n      >\n        <PresenceTransition\n          visible={isFirstVisbile}\n          {...getPresenceTransitionConfig({ duration: 700 })}\n        >\n          <UpArrow\n            color={textColor}\n            size=\"30\"\n            height=\"20\"\n            customStyle={{ position: \"relative\", top: \"100\" }}\n          />\n        </PresenceTransition>\n        <PresenceTransition\n          visible={isSecondVisbile}\n          {...getPresenceTransitionConfig({ duration: 700 })}\n        >\n          <UpArrow\n            color={textColor}\n            size=\"30\"\n            height=\"20\"\n            customStyle={{ position: \"relative\", bottom: \"0\" }}\n          />\n        </PresenceTransition>\n      </VStack>\n      <Text fontSize=\"lg\" fontWeight=\"800\" color={textColor}>\n        {swipeText}\n      </Text>\n    </Center>\n  );\n};\n\nexport default SwipeUpTransition;\n","import React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport { EasingFunction, useWindowDimensions } from \"react-native\";\n\nimport AppContext from \"../../Context/AppContext\";\nimport { Box, Center, Image } from \"native-base\";\nimport { PanGestureHandler } from \"react-native-gesture-handler\";\nimport Animated, {\n  useAnimatedGestureHandler,\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n  Easing,\n  runOnJS,\n} from \"react-native-reanimated\";\nimport { NAVIGATION_PAGES } from \"../../constants/navigatorConstants\";\nimport { NavigationProps } from \"../../types/appTypes\";\nimport { setClientHeight } from \"../../utils/commonUtils\";\n\nimport styles from \"./InitialScreen.style\";\nimport InitialScreenHeading from \"./InitialScreenHeading\";\nimport InitialScreenButtons from \"./InitialScreenButtons\";\nimport SwipeUpTransition from \"../common/SwipeUpTransition\";\n\nconst initialScreenLangImg = require(\"../../../assets/initial-screen-lang-icon.png\");\nconst initialScreenLangImgDarkMode = require(\"../../../assets/initial-screen-lang-icon-darkmode.png\");\n\ntype dimensionTypes = {\n  duration: number;\n  easing: EasingFunction;\n};\nconst easeInOpt: dimensionTypes = {\n  duration: 0,\n  easing: Easing.linear,\n};\n\nconst InitialScreen = ({ navigation }: NavigationProps) => {\n  const { state } = useContext(AppContext);\n  const { language, theme } = state || {};\n  const y = useSharedValue(0);\n  const [navigateScreen, setNavigateScreen] = useState<boolean>(false);\n  const { height } = useWindowDimensions();\n  const handleNavigate = (value: boolean) => {\n    setNavigateScreen(value);\n  };\n  const swipeScreenGestureHandler = useAnimatedGestureHandler({\n    onStart: () => {\n      y.value = withTiming(0, easeInOpt);\n    },\n    onActive: (event) => {\n      y.value = event.translationY;\n    },\n    onEnd: (event) => {\n      if (y.value < -height / 5 || event.velocityY < -400) {\n        y.value = withTiming(-height, easeInOpt);\n        runOnJS(handleNavigate)(true);\n      } else {\n        y.value = withTiming(0, easeInOpt);\n      }\n    },\n  });\n\n  const animatedContainerStyle = useAnimatedStyle(() => {\n    return {\n      transform: [\n        {\n          translateY: withTiming(y.value, easeInOpt),\n        },\n      ],\n    };\n  });\n  const initialScreenImg: any = useMemo(() => {\n    return theme === \"light\"\n      ? initialScreenLangImg\n      : initialScreenLangImgDarkMode;\n  }, [theme]);\n  useEffect(() => {\n    if (navigateScreen) {\n      navigation.navigate(NAVIGATION_PAGES.NEWS_LISTING);\n    }\n  }, [navigateScreen]);\n\n  return (\n    <Box bg=\"primary.backgroundColor\" width=\"100%\">\n      <Animated.View\n        style={[{ height: setClientHeight() }, animatedContainerStyle]}\n      >\n        <Box {...styles.container} backgroundColor=\"primary.backgroundColor\">\n          <Center zIndex={2}>\n            <Image\n              key={theme}\n              zIndex={10}\n              size={150}\n              source={initialScreenImg}\n              alt=\"Alternate Text\"\n            />\n            <InitialScreenHeading />\n            <InitialScreenButtons />\n          </Center>\n        </Box>\n        {language && (\n          <PanGestureHandler onGestureEvent={swipeScreenGestureHandler}>\n            <Animated.View style={styles.swipeStrip}>\n              <SwipeUpTransition />\n            </Animated.View>\n          </PanGestureHandler>\n        )}\n      </Animated.View>\n    </Box>\n  );\n};\n\nexport default InitialScreen;\n","import { NEWS_API_KEYS } from \"../constants/commonConstants\";\nimport { articles } from \"../types/appTypes\";\n\ntype newsReponse = {\n  articles?: articles[];\n  status?: string;\n};\n\nexport const fetchNewsData = async (params: string): Promise<newsReponse> => {\n  try {\n    const response = await fetch(\n      `https://newsapi.org/v2/everything?apiKey=${\n        NEWS_API_KEYS[Math.floor(Math.random() * 4)]\n      }${params}`\n    );\n    const data = await response.json();\n    const { status, articles } = data;\n\n    if (status === \"error\") {\n      throw new Error(\"something went wrong\");\n    }\n    const returnResponse: newsReponse = {\n      status,\n      articles: articles as articles[],\n    };\n    return returnResponse;\n  } catch (error) {\n    throw new Error(\"something went wrong\");\n  }\n};\n","import { Center, Divider, HStack, Skeleton, VStack } from \"native-base\";\nimport React from \"react\";\n\nconst NewsCardLoader = () => {\n  return (\n    <Center w=\"100%\" p=\"5\">\n      {[1, 2, 3, 4].map((key) => (\n        <VStack\n          key={key}\n          w=\"100%\"\n          borderWidth=\"1\"\n          space={2}\n          rounded=\"md\"\n          borderColor=\"primary.borderColor\"\n          mb=\"4\"\n          p=\"3\"\n        >\n          <Skeleton\n            flex=\"1\"\n            height=\"200\"\n            startColor=\"primary.secondaryBgColor\"\n            mb=\"2\"\n          />\n          <VStack flex=\"2\" space=\"2\">\n            <Skeleton h=\"6\" rounded=\"full\" startColor=\"primary.buttonColor\" />\n            <Divider\n              _dark={{ bg: \"primary.borderColor\" }}\n              _light={{ bg: \"primary.borderColor\" }}\n            />\n            <HStack justifyContent=\"space-between\">\n              <Skeleton\n                h=\"3\"\n                rounded=\"full\"\n                startColor=\"primary.secondaryBgColor\"\n                width=\"120\"\n              />\n              <Skeleton\n                h=\"3\"\n                rounded=\"full\"\n                startColor=\"primary.secondaryBgColor\"\n                width=\"120\"\n              />\n            </HStack>\n            <Divider\n              _dark={{ bg: \"primary.borderColor\" }}\n              _light={{ bg: \"primary.borderColor\" }}\n            />\n            <Skeleton.Text startColor=\"primary.secondaryBgColor\" lines={4} />\n            <Skeleton\n              h=\"3\"\n              w=\"110\"\n              flex=\"1\"\n              rounded=\"full\"\n              startColor=\"primary.buttonColor\"\n            />\n          </VStack>\n        </VStack>\n      ))}\n    </Center>\n  );\n};\n\nexport default NewsCardLoader;\n","import React from \"react\";\nimport { Box, Center, Text } from \"native-base\";\nimport { languageTextType } from \"../../../types/appTypes\";\nimport { getlanguageText } from \"../../../utils/commonUtils\";\n\ntype errorProps = {\n  errorMessage: languageTextType;\n  language: string | undefined;\n  iconComponent: any;\n};\n\nconst ErrorScreen = ({ errorMessage, language, iconComponent }: errorProps) => {\n  return (\n    <Box alignItems=\"center\" marginTop=\"auto\" marginBottom=\"auto\" pt=\"70\" p=\"5\">\n      <Center>\n        {iconComponent}\n        <Text textAlign=\"center\" mt=\"2\" fontSize=\"md\" color=\"primary.textColor\">\n          {getlanguageText(errorMessage, language)}\n        </Text>\n      </Center>\n    </Box>\n  );\n};\n\nexport default ErrorScreen;\n","import { AntDesign } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport {\n  HStack,\n  Image,\n  Stack,\n  Text,\n  Box,\n  useTheme,\n  Pressable,\n  Divider,\n  Tooltip,\n} from \"native-base\";\nimport React, { useContext, useMemo, memo } from \"react\";\nimport { Platform } from \"react-native\";\nimport {\n  FIND_MORE_TEXT,\n  shadowConfig,\n} from \"../../../../constants/commonConstants\";\nimport { NAVIGATION_PAGES } from \"../../../../constants/navigatorConstants\";\nimport AppContext from \"../../../../Context/AppContext\";\nimport { articles } from \"../../../../types/appTypes\";\nimport {\n  getDateText,\n  getlanguageText,\n  getTextAlign,\n} from \"../../../../utils/commonUtils\";\n\ntype newsCardProps = {\n  article: articles;\n};\nconst NewsCard = ({ article }: newsCardProps) => {\n  const navigation: any = useNavigation();\n  const handleCardPress = (url: string): void => {\n    if (Platform.OS === \"web\") {\n      window.open(url, \"_blank\");\n    } else {\n      navigation.navigate(NAVIGATION_PAGES.WEB_VIEW_SCREEN, {\n        url,\n      } as { url: string });\n    }\n  };\n  const { title, urlToImage, author, url, description, publishedAt } = article;\n  const { colors } = useTheme();\n  const { textColor }: any = colors.primary;\n  const { state } = useContext(AppContext);\n  const { theme, language } = state || {};\n  const imageUrl: string = useMemo(() => {\n    if (urlToImage) {\n      return urlToImage;\n    }\n    return \"\";\n  }, [urlToImage]);\n\n  const fallbackImage = useMemo(() => {\n    if (theme === \"light\") {\n      return require(\"../../../../../assets/Image_not_available_light.png\");\n    }\n    return require(\"../../../../../assets/Image_not_available_dark.png\");\n  }, [theme]);\n\n  return (\n    <Box\n      style={shadowConfig}\n      bg=\"primary.secondaryBgColor\"\n      mt=\"4\"\n      mx=\"5\"\n      pt=\"3\"\n      px=\"3\"\n      borderRadius=\"lg\"\n    >\n      <Box\n        borderColor=\"primary.borderColor\"\n        borderRadius=\"lg\"\n        alignItems=\"center\"\n      >\n        <Image\n          source={imageUrl ? { uri: imageUrl } : fallbackImage}\n          fallbackSource={fallbackImage}\n          alt=\"My Image\"\n          backgroundColor=\"primary.backgroundColor\"\n          height=\"180\"\n          width=\"100%\"\n          resizeMode=\"contain\"\n        />\n      </Box>\n\n      <Stack space=\"2\" pb=\"1\">\n        <Text\n          textAlign={getTextAlign(language)}\n          fontSize={20}\n          color={textColor}\n          fontWeight=\"black\"\n          numberOfLines={4}\n          mt=\"2\"\n        >\n          {title}\n        </Text>\n        <Divider\n          _dark={{ bg: \"primary.borderColor\" }}\n          _light={{ bg: \"primary.borderColor\" }}\n        />\n        <HStack alignItems=\"center\" justifyContent=\"space-between\">\n          {author ? (\n            <Tooltip label=\"Click here to read more\" openDelay={500}>\n              <Text\n                numberOfLines={1}\n                ellipsizeMode=\"tail\"\n                color={textColor}\n                width=\"140\"\n                fontWeight=\"bold\"\n                borderRadius=\"md\"\n                py=\"1\"\n                borderColor=\"primary.borderColor\"\n              >\n                {author}\n              </Text>\n            </Tooltip>\n          ) : (\n            <Text></Text>\n          )}\n          <Text\n            textAlign={getTextAlign(language)}\n            color={textColor}\n            fontWeight=\"bold\"\n          >\n            {getDateText(publishedAt, language)}\n          </Text>\n        </HStack>\n        <Divider\n          _dark={{ bg: \"primary.borderColor\" }}\n          _light={{ bg: \"primary.borderColor\" }}\n        />\n        <Text\n          textAlign={getTextAlign(language)}\n          fontSize={16}\n          color={textColor}\n          isTruncated\n          noOfLines={4}\n        >\n          {description}\n        </Text>\n        <Box\n          width=\"100%\"\n          flexDirection={language === \"ar\" ? \"row-reverse\" : \"row\"}\n        >\n          <Pressable onPress={() => handleCardPress(url)} mb=\"2\">\n            <Box alignItems=\"center\" flexDirection=\"row\">\n              <Text mb=\"0.5\" fontWeight=\"bold\" color={textColor} mr=\"1\">\n                {getlanguageText(FIND_MORE_TEXT, language)}\n              </Text>\n\n              <AntDesign name=\"arrowright\" size={16} color={textColor} />\n            </Box>\n          </Pressable>\n        </Box>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default memo(NewsCard);\n","import { languageTextType } from \"../types/appTypes\";\nimport { getPastDate } from \"../utils/commonUtils\";\n\nexport type filterOptionsType = {\n  name: languageTextType;\n  value: string;\n};\nexport type filterConfigType = {\n  type: string;\n  filterTitleText: languageTextType;\n  filterOptions: filterOptionsType[];\n};\n\nexport const FILTER_SECTION_TEXT: languageTextType = {\n  en: \"Filter Section\",\n  ar: \"قسم التصفية\",\n};\n\nexport const FILTER_CONFIG: filterConfigType[] = [\n  {\n    type: \"language\",\n    filterTitleText: {\n      en: \"Language\",\n      ar: \"لغة\",\n    },\n    filterOptions: [\n      {\n        name: {\n          en: \"English\",\n          ar: \"English\",\n        },\n        value: \"en\",\n      },\n      {\n        name: {\n          en: \"عربي\",\n          ar: \"عربي\",\n        },\n        value: \"ar\",\n      },\n    ],\n  },\n  {\n    type: \"sortBy\",\n    filterTitleText: {\n      en: \"Sort By\",\n      ar: \"ترتيب حسب\",\n    },\n    filterOptions: [\n      {\n        name: {\n          en: \"Published At\",\n          ar: \"نشرت في\",\n        },\n        value: \"publishedAt\",\n      },\n      {\n        name: {\n          en: \"Relevancy\",\n          ar: \"الصلة\",\n        },\n        value: \"relevancy\",\n      },\n      {\n        name: {\n          en: \"Popularity\",\n          ar: \"شعبية\",\n        },\n        value: \"popularity\",\n      },\n    ],\n  },\n  {\n    type: \"from\",\n    filterTitleText: {\n      en: \"From\",\n      ar: \"من\",\n    },\n    filterOptions: [\n      {\n        name: {\n          en: \"Past 30 Days\",\n          ar: \"آخر 30 يومًا\",\n        },\n        value: getPastDate(30),\n      },\n      {\n        name: {\n          en: \"Past 15 Days\",\n          ar: \"الخمسة عشر يومًا الماضية\",\n        },\n        value: getPastDate(15),\n      },\n      {\n        name: {\n          en: \"Past 7 Days\",\n          ar: \"الأيام السبعة الماضية\",\n        },\n        value: getPastDate(7),\n      },\n      {\n        name: {\n          en: \"Yesterday\",\n          ar: \"أمس\",\n        },\n        value: getPastDate(1),\n      },\n    ],\n  },\n];\n","import React, { useContext, useState } from \"react\";\nimport {\n  Box,\n  Modal,\n  Text,\n  Button,\n  HStack,\n  Pressable,\n  ScrollView,\n} from \"native-base\";\nimport { getlanguageText, getTextAlign } from \"../../../../utils/commonUtils\";\nimport {\n  filterConfigType,\n  filterOptionsType,\n  FILTER_CONFIG,\n  FILTER_SECTION_TEXT,\n} from \"../../../../constants/FilterConstants\";\nimport { CANCEL_TEXT, SAVE_TEXT } from \"../../../../constants/commonConstants\";\nimport CustomButton from \"../../../common/CustomButton\";\nimport AppContext from \"../../../../Context/AppContext\";\nimport { SET_FILTER_VALUES } from \"../../../../constants/reducerConstants\";\n\ntype filterValuesType = {\n  language?: string | undefined;\n  sortBy?: string;\n  from?: string;\n};\ntype PropType = {\n  showModal: boolean;\n  setShowModal: React.Dispatch<React.SetStateAction<boolean>>;\n};\nconst FilterModal = ({ setShowModal, showModal }: PropType) => {\n  const { state, dispatch } = useContext(AppContext);\n  const { language, sortBy, from } = state || {};\n  const [isFilterChanged, setIsFilterChanged] = useState<boolean>(false);\n  const [filterValue, setFilterValue] = useState<filterValuesType>({\n    language,\n    sortBy,\n    from,\n  });\n  const handleChangeFilter = (): void => {\n    const changedPayload: filterValuesType = {};\n    Object.keys(filterValue).forEach((key) => {\n      if (\n        filterValue[key as keyof filterValuesType] !==\n        state[key as keyof filterValuesType]\n      ) {\n        changedPayload[key as keyof filterValuesType] =\n          filterValue[key as keyof filterValuesType];\n      }\n    });\n    dispatch({ type: SET_FILTER_VALUES, payload: { ...changedPayload } });\n    setShowModal(false);\n  };\n  const handleSelectFilter = (type: string, itemValue: string): void => {\n    setFilterValue({ ...filterValue, [type]: itemValue });\n    if (state[type as keyof filterValuesType] !== itemValue) {\n      setIsFilterChanged(true);\n    }\n  };\n  return (\n    <Modal\n      isOpen={showModal}\n      onClose={() => {\n        setShowModal(false);\n      }}\n      size=\"md\"\n      closeOnOverlayClick={false}\n      bg=\"rgba(0, 0, 0, 0.6)\"\n    >\n      <Modal.Content maxH=\"450\" backgroundColor=\"primary.secondaryBgColor\">\n        <Modal.Header\n          backgroundColor=\"primary.secondaryBgColor\"\n          borderColor=\"primary.borderColor\"\n        >\n          <Text\n            textAlign={getTextAlign(language)}\n            color=\"primary.textColor\"\n            fontWeight=\"bold\"\n            fontSize=\"lg\"\n          >\n            {getlanguageText(FILTER_SECTION_TEXT, language)}\n          </Text>\n        </Modal.Header>\n        <Modal.Body>\n          {FILTER_CONFIG.map((config: filterConfigType, index: number) => {\n            const { type, filterTitleText, filterOptions }: filterConfigType =\n              config;\n            return (\n              <Box key={index} mb=\"3\">\n                <Text\n                  textAlign={getTextAlign(language)}\n                  color=\"primary.textColor\"\n                  fontWeight=\"bold\"\n                  fontSize=\"md\"\n                  mb=\"2\"\n                >\n                  {getlanguageText(filterTitleText, language)}\n                </Text>\n                <ScrollView\n                  horizontal={true}\n                  width=\"100%\"\n                  showsHorizontalScrollIndicator={false}\n                  flexDirection={`${\n                    filterOptions.length <= 3\n                      ? language === \"ar\"\n                        ? \"row-reverse\"\n                        : \"row\"\n                      : \"row\"\n                  }`}\n                >\n                  <HStack space={2} width=\"100%\">\n                    {filterOptions.map(\n                      (opt: filterOptionsType, index: number) => {\n                        const isSelected: boolean =\n                          opt.value ===\n                          filterValue[type as keyof filterValuesType];\n\n                        return (\n                          <Pressable\n                            key={index}\n                            bg={`${\n                              isSelected\n                                ? \"primary.backgroundColor\"\n                                : \"primary.buttonColor\"\n                            }`}\n                            borderWidth={1}\n                            p=\"2\"\n                            borderRadius=\"10\"\n                            onPress={() => handleSelectFilter(type, opt.value)}\n                            borderColor=\"primary.borderColor\"\n                          >\n                            <Text\n                              textAlign={getTextAlign(language)}\n                              color=\"primary.textColor\"\n                            >\n                              {getlanguageText(opt.name, language)}\n                            </Text>\n                          </Pressable>\n                        );\n                      }\n                    )}\n                  </HStack>\n                </ScrollView>\n              </Box>\n            );\n          })}\n        </Modal.Body>\n        <Modal.Footer\n          borderColor=\"primary.borderColor\"\n          backgroundColor=\"primary.secondaryBgColor\"\n        >\n          <Button.Group space={2}>\n            <CustomButton\n              btnText={getlanguageText(CANCEL_TEXT, language)}\n              isSelected={false}\n              onPress={() => setShowModal(false)}\n              isDisabled={false}\n              customStyle={{ width: 100, height: 50 }}\n            />\n            <CustomButton\n              btnText={getlanguageText(SAVE_TEXT, language)}\n              isSelected={false}\n              onPress={handleChangeFilter}\n              isDisabled={!isFilterChanged}\n              customStyle={{ width: 100, height: 50 }}\n            />\n          </Button.Group>\n        </Modal.Footer>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default FilterModal;\n","import React, { useState } from \"react\";\nimport { IconButton, Center, Box } from \"native-base\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport FilterModal from \"./FilterModal\";\n\nconst FilterSection = () => {\n  const [showModal, setShowModal] = useState<boolean>(false);\n\n  const handleShowFilterModal = (): void => {\n    setShowModal(true);\n  };\n\n  return (\n    <Center\n      borderLeftWidth={1}\n      borderColor=\"primary.borderColor\"\n      flexBasis=\"30%\"\n    >\n      <Box pl=\"3\" pr=\"3\" width=\"100%\">\n        <IconButton\n          size=\"md\"\n          variant=\"solid\"\n          backgroundColor=\"primary.buttonColor\"\n          color=\"primary.textColor\"\n          borderWidth={1}\n          borderColor=\"primary.borderColor\"\n          _icon={{\n            as: MaterialIcons,\n            name: \"menu\",\n            color: \"primary.textColor\",\n          }}\n          textAlign=\"center\"\n          onPress={handleShowFilterModal}\n        />\n      </Box>\n      {showModal && (\n        <FilterModal showModal={showModal} setShowModal={setShowModal} />\n      )}\n    </Center>\n  );\n};\n\nexport default FilterSection;\n","import { ImageSourcePropType } from \"react-native\";\nimport { languageTextType } from \"../types/appTypes\";\n\nexport type customStyleType = {\n  width: number;\n  height: number;\n  bottom?: number;\n  left?: number;\n};\n\nexport type topicParamType = {\n  queryText: string;\n  iconUrl: ImageSourcePropType;\n  tabText: languageTextType;\n  customStyle: customStyleType;\n  ml: number;\n};\nexport const TOPIC_PARAMS: topicParamType[] = [\n  {\n    queryText: \"apple\",\n    iconUrl: require(\"../../assets/apple-logo.png\"),\n    tabText: { en: \"Apple\", ar: \"تفاحة\" },\n    customStyle: {\n      width: 5,\n      height: 6,\n      left: 1.5,\n    },\n    ml: 4,\n  },\n  {\n    queryText: \"meta\",\n    iconUrl: require(\"../../assets/meta-logo.png\"),\n    tabText: { en: \"Meta\", ar: \"ميتا\" },\n    customStyle: {\n      width: 10,\n      height: 6,\n    },\n    ml: 2,\n  },\n  {\n    queryText: \"netflix\",\n    iconUrl: require(\"../../assets/netflix-logo.png\"),\n    tabText: { en: \"Netflix\", ar: \"نيتفليكس\" },\n    customStyle: {\n      width: 5,\n      height: 6,\n      left: 1.5,\n    },\n    ml: 4,\n  },\n  {\n    queryText: \"google\",\n    iconUrl: require(\"../../assets/google-logo.png\"),\n    tabText: { en: \"Google\", ar: \"جوجل\" },\n    customStyle: {\n      width: 6,\n      height: 6,\n      left: 1,\n    },\n    ml: 3,\n  },\n  {\n    queryText: \"twitter\",\n    iconUrl: require(\"../../assets/twitter-logo.png\"),\n    tabText: { en: \"Twitter\", ar: \"تويتر\" },\n    customStyle: {\n      width: 8,\n      height: 6,\n    },\n    ml: 1,\n  },\n  {\n    queryText: \"tesla\",\n    iconUrl: require(\"../../assets/tesla-logo.png\"),\n    tabText: { en: \"Tesla\", ar: \"تسلا\" },\n    customStyle: {\n      width: 7,\n      height: 6,\n      left: 0.5,\n    },\n    ml: 3.5,\n  },\n];\n","import { Box, HStack, ScrollView, Text, Image, Pressable } from \"native-base\";\nimport React, { useContext, useMemo } from \"react\";\nimport { Platform } from \"react-native\";\nimport { shadowConfig } from \"../../../constants/commonConstants\";\nimport { SET_TOPIC } from \"../../../constants/reducerConstants\";\nimport {\n  topicParamType,\n  TOPIC_PARAMS,\n} from \"../../../constants/topicConstants\";\nimport AppContext from \"../../../Context/AppContext\";\nimport { getlanguageText } from \"../../../utils/commonUtils\";\n\nconst TopicSection = () => {\n  const { state, dispatch } = useContext(AppContext);\n  const { topic, language } = state || {};\n  const getSelectedTagConfig = (queryText: string): boolean => {\n    return topic === queryText;\n  };\n  const handleTopicClick = (selectedTopic: string): void => {\n    if (selectedTopic === topic) {\n      return;\n    }\n    dispatch({ type: SET_TOPIC, payload: { topic: selectedTopic } });\n  };\n  const USED_TOPIC_PARAMS: topicParamType[] = useMemo(() => {\n    return TOPIC_PARAMS.sort(function (x, y) {\n      return x.queryText === topic ? -1 : y.queryText === topic ? 1 : 0;\n    });\n  }, [topic]);\n  return (\n    <ScrollView\n      horizontal={true}\n      showsHorizontalScrollIndicator={false}\n      p=\"2\"\n      pr=\"10\"\n      flexBasis=\"70%\"\n    >\n      <HStack space={1} alignItems=\"center\">\n        {USED_TOPIC_PARAMS.map((query: topicParamType, index: number) => {\n          const isSelected = getSelectedTagConfig(query.queryText);\n\n          return (\n            <Pressable\n              mr={`${\n                USED_TOPIC_PARAMS.length - 1 === index && Platform.OS !== \"web\"\n                  ? \"5\"\n                  : \"0\"\n              }`}\n              key={index}\n              onPress={() => handleTopicClick(query.queryText)}\n            >\n              <HStack\n                bg={`${\n                  isSelected ? \"primary.backgroundColor\" : \"primary.buttonColor\"\n                }`}\n                {...shadowConfig}\n                borderRadius={15}\n                minW={51}\n                p=\"2\"\n                pr=\"3\"\n                alignItems=\"center\"\n                borderWidth={1}\n                borderColor=\"primary.borderColor\"\n              >\n                <Image\n                  {...query.customStyle}\n                  source={query.iconUrl}\n                  alt={query.queryText}\n                  p=\"1\"\n                />\n                {isSelected && (\n                  <Text\n                    fontWeight=\"black\"\n                    textAlign=\"right\"\n                    fontSize=\"md\"\n                    ml={query.ml}\n                    position=\"relative\"\n                    color=\"primary.textColor\"\n                  >\n                    {getlanguageText(query.tabText, language)}\n                  </Text>\n                )}\n              </HStack>\n            </Pressable>\n          );\n        })}\n      </HStack>\n    </ScrollView>\n  );\n};\n\nexport default React.memo(TopicSection);\n","import { Box, Divider, HStack, Text } from \"native-base\";\nimport React, { useContext } from \"react\";\nimport {\n  NEWS_FEED_TEXT,\n  shadowConfig,\n} from \"../../../../constants/commonConstants\";\nimport AppContext from \"../../../../Context/AppContext\";\nimport { getlanguageText } from \"../../../../utils/commonUtils\";\nimport FilterSection from \"../../FilterSection\";\nimport TopicSection from \"../../TopicSection\";\n\ntype listingHeaderProps = {\n  children: any;\n};\n\nconst ListingHeader = ({ children }: listingHeaderProps) => {\n  const { state } = useContext(AppContext);\n  const { language } = state || {};\n  return (\n    <Box>\n      <Box p=\"3\" bg=\"primary.secondaryBgColor\" {...shadowConfig}>\n        <Text textAlign=\"center\" color=\"primary.textColor\" fontWeight=\"black\">\n          {getlanguageText(NEWS_FEED_TEXT, language)}\n        </Text>\n      </Box>\n      <HStack\n        width=\"100%\"\n        borderColor=\"primary.borderColor\"\n        borderTopWidth=\"1\"\n        borderBottomWidth=\"1\"\n        flexWrap=\"wrap\"\n        bg=\"primary.secondaryBgColor\"\n      >\n        <TopicSection />\n        <FilterSection />\n      </HStack>\n      {children}\n    </Box>\n  );\n};\n\nexport default React.memo(ListingHeader);\n","import { Box, FlatList, useTheme } from \"native-base\";\nimport React, { useContext, useEffect, useRef } from \"react\";\nimport AppContext from \"../../../Context/AppContext\";\nimport { initialStateTypes } from \"../../../types/reducerTypes\";\nimport { fetchNewsData } from \"../../../services/apiService\";\nimport { convertObjIntoString } from \"../../../utils/commonUtils\";\nimport {\n  SET_ARTICLES_ERROR,\n  SET_ARTICLES_LOADING,\n  SET_ARTICLE_DATA,\n} from \"../../../constants/reducerConstants\";\nimport NewsCardLoader from \"../../common/NewsCardLoader\";\nimport {\n  DEFAULT_EMPTY_MESSAGE,\n  DEFAULT_ERROR_MESSAGE,\n} from \"../../../constants/commonConstants\";\nimport ErrorScreen from \"../../common/ErrorScreen\";\nimport NewsCard from \"./NewsCard\";\nimport { articles } from \"../../../types/appTypes\";\nimport ListingHeader from \"./ListingHeader\";\nimport { MaterialCommunityIcons, MaterialIcons } from \"@expo/vector-icons\";\n\ntype Scrollable = {\n  scrollToOffset: (options: { offset: number; animated: boolean }) => void;\n};\n\nconst ListingSection = () => {\n  const { state, dispatch } = useContext(AppContext);\n  const { colors } = useTheme();\n  const { textColor }: any = colors.primary;\n  const listRef = useRef<Scrollable | null>(null);\n\n  const {\n    language,\n    topic,\n    sortBy,\n    from,\n    isNewsLoading,\n    isError,\n    articles,\n  }: initialStateTypes = state || {};\n\n  const getNewsData = async (): Promise<void> => {\n    try {\n      dispatch({\n        type: SET_ARTICLES_LOADING,\n        payload: { isNewsLoading: true, articles: [] },\n      });\n      const response = await fetchNewsData(\n        convertObjIntoString({ language, q: topic, sortBy, from })\n      );\n      const { status, articles = [] } = response;\n\n      if (status === \"ok\") {\n        dispatch({\n          type: SET_ARTICLE_DATA,\n          payload: { articles, isNewsLoading: false },\n        });\n      } else {\n        dispatch({\n          type: SET_ARTICLES_ERROR,\n          payload: { isError: true, isNewsLoading: false },\n        });\n      }\n    } catch (e: any) {\n      dispatch({\n        type: SET_ARTICLES_ERROR,\n        payload: { isError: true, isNewsLoading: false },\n      });\n    }\n  };\n  useEffect((): void => {\n    getNewsData();\n    if (listRef.current) {\n      listRef.current.scrollToOffset({ offset: 0, animated: false });\n    }\n  }, [language, topic, sortBy, from]);\n\n  const renderHeader = () => {\n    return (\n      <ListingHeader>\n        {isNewsLoading ? (\n          <NewsCardLoader />\n        ) : isError ? (\n          <ErrorScreen\n            errorMessage={DEFAULT_ERROR_MESSAGE}\n            language={language}\n            iconComponent={\n              <MaterialIcons name=\"error\" size={40} color={textColor} />\n            }\n          />\n        ) : null}\n      </ListingHeader>\n    );\n  };\n  const renderItem = ({ item }: { item: articles }) =>\n    isError ? null : <NewsCard article={item} />;\n\n  return (\n    <Box height=\"100%\">\n      <FlatList\n        ref={listRef}\n        data={articles}\n        renderItem={renderItem}\n        showsVerticalScrollIndicator={false}\n        ListHeaderComponent={renderHeader}\n        ListEmptyComponent={\n          isError || isNewsLoading ? null : (\n            <ErrorScreen\n              errorMessage={DEFAULT_EMPTY_MESSAGE}\n              language={language}\n              iconComponent={\n                <MaterialCommunityIcons\n                  name=\"magnify-close\"\n                  size={40}\n                  color={textColor}\n                />\n              }\n            />\n          )\n        }\n        stickyHeaderIndices={[0]}\n        keyExtractor={(_, key) => `article_${key}`}\n        removeClippedSubviews={true} // Unmount components when outside of window\n        initialNumToRender={2} // Reduce initial render amount\n        maxToRenderPerBatch={1} // Reduce number in each render batch\n        updateCellsBatchingPeriod={100} // Increase time between renders\n        windowSize={7}\n      />\n    </Box>\n  );\n};\n\nexport default ListingSection;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport { Box, Fab, useTheme } from \"native-base\";\nimport React, { useContext, useEffect } from \"react\";\nimport { shadowConfig } from \"../../constants/commonConstants\";\nimport { SET_THEME } from \"../../constants/reducerConstants\";\nimport AppContext from \"../../Context/AppContext\";\nimport { NavigationProps } from \"../../types/appTypes\";\nimport { setClientHeight } from \"../../utils/commonUtils\";\nimport ListingSection from \"./ListingSection\";\n\nconst NewsListing = ({ navigation }: NavigationProps) => {\n  const { state, dispatch } = useContext(AppContext);\n  const { theme } = state || {};\n  const { colors } = useTheme();\n  const { selectedBtnTextColor }: any = colors.primary;\n  const handleThemeChange = (): void => {\n    dispatch({\n      type: SET_THEME,\n      payload: { theme: theme === \"dark\" ? \"light\" : \"dark\" },\n    });\n  };\n  useEffect(\n    () =>\n      navigation.addListener(\"beforeRemove\", (e: any) => {\n        e.preventDefault();\n        return;\n      }),\n    [navigation]\n  );\n  return (\n    <Box bg=\"primary.backgroundColor\" width=\"100%\" height={setClientHeight()}>\n      <ListingSection />\n      <Fab\n        placement=\"bottom-right\"\n        borderWidth={1}\n        borderColor=\"primary.borderColor\"\n        bgColor=\"primary.buttonColor\"\n        {...shadowConfig}\n        size={16}\n        icon={\n          theme === \"dark\" ? (\n            <Ionicons\n              name=\"moon\"\n              size={30}\n              style={{ color: selectedBtnTextColor }}\n            />\n          ) : (\n            <Ionicons\n              name=\"sunny\"\n              size={30}\n              style={{ color: selectedBtnTextColor }}\n            />\n          )\n        }\n        onPress={handleThemeChange}\n      />\n    </Box>\n  );\n};\n\nexport default NewsListing;\n","import React from \"react\";\nimport { RouteProp, useRoute } from \"@react-navigation/native\";\nimport { WebView } from \"react-native-webview\";\n\ntype WebViewScreenRouteProp = RouteProp<\n  Record<string, { url: string }>,\n  string\n>;\nconst WebViewScreen = () => {\n  const route = useRoute<WebViewScreenRouteProp>();\n  const { params } = route;\n  const { url } = params;\n  return <WebView source={{ uri: url }} style={{ flex: 1, height: \"100%\" }} />;\n};\n\nexport default WebViewScreen;\n","import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { NAVIGATION_PAGES } from \"../../constants/navigatorConstants\";\nimport InitialScreen from \"../InitialScreen\";\nimport NewsListing from \"../NewsListing\";\nimport WebViewScreen from \"../WebViewScreen\";\n\nconst Stack = createNativeStackNavigator();\n\nconst NewAppContainer = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerShown: false,\n        }}\n        initialRouteName={NAVIGATION_PAGES.INITIAL_SCREEN}\n      >\n        <Stack.Screen\n          name={NAVIGATION_PAGES.INITIAL_SCREEN}\n          component={InitialScreen}\n        />\n        <Stack.Screen\n          name={NAVIGATION_PAGES.NEWS_LISTING}\n          component={NewsListing}\n        />\n        <Stack.Screen\n          name={NAVIGATION_PAGES.WEB_VIEW_SCREEN}\n          component={WebViewScreen}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default NewAppContainer;\n","import React, { useEffect, useReducer } from \"react\";\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport { NativeBaseProvider, Box } from \"native-base\";\nimport AppContext from \"./src/Context/AppContext\";\nimport { AppReducer, initialState } from \"./src/Reducer\";\nimport { ContextProps } from \"./src/types/appTypes\";\nimport { actionType, initialStateTypes } from \"./src/types/reducerTypes\";\nimport { darkTheme, lightTheme } from \"./src/Theme/ThemeConstants\";\nimport NewAppContainer from \"./src/components/NewAppContainer\";\nimport { setClientHeight } from \"./src/utils/commonUtils\";\nimport { useColorScheme } from \"react-native\";\nimport { SET_THEME } from \"./src/constants/reducerConstants\";\n\nconst App = () => {\n  const [state, dispatch] = useReducer<\n    React.Reducer<initialStateTypes, actionType>\n  >(AppReducer, initialState);\n  const value: ContextProps = {\n    state,\n    dispatch,\n  };\n  const colorScheme = useColorScheme();\n  useEffect(() => {\n    dispatch({\n      type: SET_THEME,\n      payload: { theme: colorScheme ? colorScheme : \"dark\" },\n    });\n  }, []);\n  const theme = state.theme === \"light\" ? lightTheme : darkTheme;\n  return (\n    <NativeBaseProvider theme={theme}>\n      <GestureHandlerRootView>\n        <AppContext.Provider value={value}>\n          <Box\n            width=\"100%\"\n            height={setClientHeight()}\n            bg=\"primary.backgroundColor\"\n            safeArea\n          >\n            <NewAppContainer />\n          </Box>\n        </AppContext.Provider>\n      </GestureHandlerRootView>\n    </NativeBaseProvider>\n  );\n};\nexport default App;\n","var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 44707,\n\t\"./bs.js\": 44707,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 2553,\n\t\"./es-mx.js\": 2553,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/news-application-react-native/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [860], () => (__webpack_require__(19386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["createContext","SET_LANGUAGE","SET_TOPIC","SET_FILTER_VALUES","SET_ARTICLE_DATA","SET_ARTICLES_ERROR","SET_ARTICLES_LOADING","SET_THEME","shadowConfig","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","SWIPE_UP_TEXT","en","ar","CANCEL_TEXT","SAVE_TEXT","FIND_MORE_TEXT","DEFAULT_ERROR_MESSAGE","NEWS_FEED_TEXT","DEFAULT_EMPTY_MESSAGE","LANGUAGE_DAYS","LANGUAGE_MONTH","NEWS_API_KEYS","windowDimensions","Dimensions","setClientHeight","Platform","getPresenceTransitionConfig","_ref","_ref$duration","duration","config","initial","opacity","animate","transition","isAddScaling","scale","getlanguageText","langObj","language","getTextAlign","getPastDate","days","moment","subtract","format","getDateText","date","dateObj","Date","arMonths","getDay","getDate","getMonth","getFullYear","enMonths","initialState","theme","topic","sortBy","from","articles","isNewsLoading","isError","AppReducer","state","action","type","queryParam","payload","_objectSpread","Error","lightTheme","extendTheme","colors","primary","backgroundColor","borderColor","secondaryBgColor","buttonColor","textColor","selectedBtnTextColor","darkTheme","NAVIGATION_PAGES","StyleSheet","swipeStrip","position","bottom","left","container","alignItems","marginTop","marginBottom","INITIAL_SCREEN_TEXT_CONFIG","ENGLISH","text","btnText","ARABIC","HEADING_VALUES","useMemo","Object","values","map","val","_jsx","Box","pt","children","Center","value","index","Text","color","fontSize","props","onPress","isSelected","_props$isDisabled","isDisabled","customStyle","styleObj","variant","bgColor","Button","style","borderWidth","_text","fontWeight","_useContext","useContext","AppContext","dispatch","BTN_TEXT","HStack","space","justifyContent","CustomButton","size","_ref$color","Svg","viewBox","Path","fill","d","useTheme","_useState","useState","_useState2","_slicedToArray","isFirstVisbile","setFirstVisble","_useState3","_useState4","isSecondVisbile","setSecondVisible","swipeText","useEffect","setTimeout","_jsxs","VStack","top","PresenceTransition","visible","UpArrow","initialScreenLangImg","require","initialScreenLangImgDarkMode","easeInOpt","easing","Easing","navigation","_ref2","y","useSharedValue","navigateScreen","setNavigateScreen","useWindowDimensions","handleNavigate","swipeScreenGestureHandler","useAnimatedGestureHandler","onStart","_f","withTiming","_closure","asString","__workletHash","__location","onActive","event","translationY","onEnd","velocityY","runOnJS","animatedContainerStyle","useAnimatedStyle","transform","translateY","__optimalization","initialScreenImg","navigate","bg","Animated","styles","zIndex","Image","source","alt","InitialScreenHeading","InitialScreenButtons","PanGestureHandler","onGestureEvent","SwipeUpTransition","fetchNewsData","_asyncToGenerator","params","response","fetch","Math","floor","random","data","json","status","error","_x","apply","arguments","w","p","key","rounded","mb","Skeleton","flex","startColor","h","Divider","_dark","_light","lines","errorMessage","iconComponent","textAlign","mt","memo","article","useNavigation","title","urlToImage","author","url","description","publishedAt","imageUrl","fallbackImage","mx","px","borderRadius","uri","fallbackSource","resizeMode","Stack","pb","numberOfLines","Tooltip","label","openDelay","ellipsizeMode","py","isTruncated","noOfLines","flexDirection","Pressable","window","open","handleCardPress","mr","AntDesign","name","FILTER_SECTION_TEXT","FILTER_CONFIG","filterTitleText","filterOptions","setShowModal","showModal","isFilterChanged","setIsFilterChanged","filterValue","setFilterValue","Modal","isOpen","onClose","closeOnOverlayClick","maxH","ScrollView","horizontal","showsHorizontalScrollIndicator","length","opt","itemValue","_defineProperty","handleSelectFilter","changedPayload","keys","forEach","borderLeftWidth","flexBasis","pl","pr","IconButton","_icon","as","MaterialIcons","FilterModal","TOPIC_PARAMS","queryText","iconUrl","tabText","ml","React","USED_TOPIC_PARAMS","sort","x","query","selectedTopic","minW","borderTopWidth","borderBottomWidth","flexWrap","TopicSection","FilterSection","listRef","useRef","getNewsData","obj","string","convertObjIntoString","q","_response$articles","e","current","scrollToOffset","offset","animated","FlatList","ref","renderItem","_ref3","item","NewsCard","showsVerticalScrollIndicator","ListHeaderComponent","ListingHeader","NewsCardLoader","ErrorScreen","ListEmptyComponent","MaterialCommunityIcons","stickyHeaderIndices","keyExtractor","_","removeClippedSubviews","initialNumToRender","maxToRenderPerBatch","updateCellsBatchingPeriod","windowSize","addListener","preventDefault","ListingSection","Fab","placement","icon","Ionicons","useRoute","WebView","createNativeStackNavigator","NavigationContainer","Navigator","screenOptions","headerShown","initialRouteName","Screen","component","InitialScreen","NewsListing","WebViewScreen","_useReducer","useReducer","_useReducer2","colorScheme","useColorScheme","NativeBaseProvider","GestureHandlerRootView","safeArea","NewAppContainer","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","code","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","n","getter","__esModule","a","leafPrototypes","getProto","getPrototypeOf","t","mode","this","then","ns","create","def","indexOf","getOwnPropertyNames","definition","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}